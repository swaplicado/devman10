/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package devman.mod.dev.form;

import devman.gui.SGuiMainSessionCustom;
import devman.mod.SModConsts;
import devman.mod.dev.db.SDbTrace;
import sa.lib.SLibConsts;
import sa.lib.SLibUtils;
import sa.lib.db.SDbRegistry;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiConsts;
import sa.lib.gui.SGuiFieldKeyGroup;
import sa.lib.gui.SGuiUtils;
import sa.lib.gui.SGuiValidation;
import sa.lib.gui.bean.SBeanForm;

/**
 *
 * @author Juan Barajas, Sergio Flores
 */
public class SFormTrace extends SBeanForm {

    private SDbTrace moRegistry;
    private SGuiFieldKeyGroup moKeyGroupStagePhase;
    private SGuiFieldKeyGroup moKeyGroupRequirement;

    /**
     * Creates new form SFormTrace
     * @param client
     * @param title
     */
    public SFormTrace(SGuiClient client, String title) {
        setFormSettings(client, SGuiConsts.BEAN_FORM_EDIT, SModConsts.D_TST_PLN_TST_LOG, SLibConsts.UNDEFINED, title);
        initComponents();
        initComponentsCustom();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jlProject = new javax.swing.JLabel();
        moKeyProject = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel10 = new javax.swing.JPanel();
        jlProjectStage = new javax.swing.JLabel();
        moKeyProjectStage = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel12 = new javax.swing.JPanel();
        jlProjectStagePhase = new javax.swing.JLabel();
        moKeyProjectStagePhase = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel9 = new javax.swing.JPanel();
        jlProjectRequirement = new javax.swing.JLabel();
        moKeyProjectRequirement = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel6 = new javax.swing.JPanel();
        jlDate = new javax.swing.JLabel();
        moDateDate = new sa.lib.gui.bean.SBeanFieldDate();
        jPanel5 = new javax.swing.JPanel();
        jlNotes = new javax.swing.JLabel();
        moTextNotes = new sa.lib.gui.bean.SBeanFieldText();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.GridLayout(6, 0, 0, 5));

        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEADING, 5, 0));

        jlProject.setForeground(java.awt.Color.blue);
        jlProject.setText("Proyecto:*");
        jlProject.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel8.add(jlProject);

        moKeyProject.setPreferredSize(new java.awt.Dimension(400, 23));
        jPanel8.add(moKeyProject);

        jPanel2.add(jPanel8);

        jPanel10.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEADING, 5, 0));

        jlProjectStage.setForeground(java.awt.Color.blue);
        jlProjectStage.setText("Etapa:*");
        jlProjectStage.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel10.add(jlProjectStage);

        moKeyProjectStage.setPreferredSize(new java.awt.Dimension(400, 23));
        moKeyProjectStage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moKeyProjectStageActionPerformed(evt);
            }
        });
        jPanel10.add(moKeyProjectStage);

        jPanel2.add(jPanel10);

        jPanel12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEADING, 5, 0));

        jlProjectStagePhase.setForeground(java.awt.Color.blue);
        jlProjectStagePhase.setText("Fase:*");
        jlProjectStagePhase.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel12.add(jlProjectStagePhase);

        moKeyProjectStagePhase.setPreferredSize(new java.awt.Dimension(400, 23));
        jPanel12.add(moKeyProjectStagePhase);

        jPanel2.add(jPanel12);

        jPanel9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEADING, 5, 0));

        jlProjectRequirement.setForeground(java.awt.Color.blue);
        jlProjectRequirement.setText("Requerimiento:*");
        jlProjectRequirement.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel9.add(jlProjectRequirement);

        moKeyProjectRequirement.setPreferredSize(new java.awt.Dimension(500, 23));
        jPanel9.add(moKeyProjectRequirement);

        jPanel2.add(jPanel9);

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlDate.setText("Fecha:*");
        jlDate.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel6.add(jlDate);

        moDateDate.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel6.add(moDateDate);

        jPanel2.add(jPanel6);

        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEADING, 5, 0));

        jlNotes.setText("Notas:");
        jlNotes.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel5.add(jlNotes);

        moTextNotes.setPreferredSize(new java.awt.Dimension(400, 23));
        jPanel5.add(moTextNotes);

        jPanel2.add(jPanel5);

        jPanel1.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void moKeyProjectStageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moKeyProjectStageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_moKeyProjectStageActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JLabel jlDate;
    private javax.swing.JLabel jlNotes;
    private javax.swing.JLabel jlProject;
    private javax.swing.JLabel jlProjectRequirement;
    private javax.swing.JLabel jlProjectStage;
    private javax.swing.JLabel jlProjectStagePhase;
    private sa.lib.gui.bean.SBeanFieldDate moDateDate;
    private sa.lib.gui.bean.SBeanFieldKey moKeyProject;
    private sa.lib.gui.bean.SBeanFieldKey moKeyProjectRequirement;
    private sa.lib.gui.bean.SBeanFieldKey moKeyProjectStage;
    private sa.lib.gui.bean.SBeanFieldKey moKeyProjectStagePhase;
    private sa.lib.gui.bean.SBeanFieldText moTextNotes;
    // End of variables declaration//GEN-END:variables

    /*
     * Private methods
     */

    private void initComponentsCustom() {
        SGuiUtils.setWindowBounds(this, 640, 400);
        
        moKeyGroupStagePhase = new SGuiFieldKeyGroup(miClient);
        moKeyGroupRequirement = new SGuiFieldKeyGroup(miClient);

        moKeyProject.setKeySettings(miClient, SGuiUtils.getLabelName(jlProject), true);
        moKeyProjectStage.setKeySettings(miClient, SGuiUtils.getLabelName(jlProjectStage), true);
        moKeyProjectStagePhase.setKeySettings(miClient, SGuiUtils.getLabelName(jlProjectStagePhase), true);
        moKeyProjectRequirement.setKeySettings(miClient, SGuiUtils.getLabelName(jlProjectRequirement), true);
        moDateDate.setDateSettings(miClient, SGuiUtils.getLabelName(jlDate), true);
        moTextNotes.setTextSettings(SGuiUtils.getLabelName(jlNotes), 255, 0);

        moFields.addField(moKeyProject);
        moFields.addField(moKeyProjectStage);
        moFields.addField(moKeyProjectStagePhase);
        moFields.addField(moKeyProjectRequirement);
        moFields.addField(moDateDate);
        moFields.addField(moTextNotes);

        moFields.setFormButton(jbSave);
    }

    /*
     * Public methods
     */

    /*
     * Overriden methods
     */

    @Override
    public void addAllListeners() {
    }

    @Override
    public void removeAllListeners() {
    }

    @Override
    public void reloadCatalogues() {
        moKeyGroupStagePhase.initGroup();
        moKeyGroupStagePhase.addFieldKey(moKeyProject, SModConsts.PU_PRJ, SLibConsts.UNDEFINED, null);
        moKeyGroupStagePhase.addFieldKey(moKeyProjectStage, SModConsts.PU_PRJ_STG, SLibConsts.UNDEFINED, null);
        moKeyGroupStagePhase.addFieldKey(moKeyProjectStagePhase, SModConsts.PU_PRJ_STG_PHS, SModConsts.D_TRC, null);
        moKeyGroupStagePhase.populateCatalogues();
        
        moKeyGroupRequirement.initGroup();
        moKeyGroupRequirement.addFieldKey(moKeyProject, SModConsts.PU_PRJ, SLibConsts.UNDEFINED, null);
        moKeyGroupRequirement.addFieldKey(moKeyProjectRequirement, SModConsts.DU_REQ, SLibConsts.UNDEFINED, null);
        moKeyGroupRequirement.populateCatalogues();
    }

    @Override
    public void setRegistry(SDbRegistry registry) throws Exception {
        moRegistry = (SDbTrace) registry;

        mnFormResult = SLibConsts.UNDEFINED;
        mbFirstActivation = true;

        removeAllListeners();
        reloadCatalogues();

        if (moRegistry.isRegistryNew()) {
            //moRegistry.setCode("");
            
            if (moRegistry.getFkPhaseProjectId() == SLibConsts.UNDEFINED) {
                moRegistry.setFkPhaseProjectId(((SGuiMainSessionCustom) miClient.getSession().getSessionCustom()).getProjectStageKey()[0]);
                moRegistry.setFkPhaseStageId(((SGuiMainSessionCustom) miClient.getSession().getSessionCustom()).getProjectStageKey()[1]);
                moRegistry.setTraceDate(miClient.getSession().getCurrentDate());
            }
            
            jtfRegistryKey.setText("");
        }
        else {
            jtfRegistryKey.setText(SLibUtils.textKey(moRegistry.getPrimaryKey()));
        }

        moKeyProject.setValue(new int[] { moRegistry.getFkPhaseProjectId() });
        moKeyProjectStage.setValue(new int[] { moRegistry.getFkPhaseProjectId(), moRegistry.getFkPhaseStageId() });
        moKeyProjectStagePhase.setValue(new int[] { moRegistry.getFkPhaseProjectId(), moRegistry.getFkPhaseStageId(), moRegistry.getFkPhasePhaseId() });
        moKeyProjectRequirement.setValue(new int[] { moRegistry.getFkRequirementProjectId(), moRegistry.getFkRequirementRequirementId() });
        moDateDate.setValue(moRegistry.getTraceDate());
        moTextNotes.setValue(moRegistry.getNotes());

        setFormEditable(true);
        
        if (moRegistry.isRegistryNew()) {
            if (moRegistry.getFkPhaseProjectId() == SLibConsts.UNDEFINED) {
                moKeyGroupStagePhase.resetGroup();
                moKeyGroupRequirement.resetGroup();
            }
            else {
                moKeyProjectStagePhase.setEnabled(moKeyProjectStagePhase.getItemCount() > 0);
            }
        }
        else {
            moKeyProject.setEnabled(false);
            moKeyProjectStage.setEnabled(false);
            moKeyProjectStagePhase.setEnabled(false);
            moKeyProjectRequirement.setEnabled(false);
        }
        
        addAllListeners();
    }

    @Override
    public SDbTrace getRegistry() throws Exception {
        SDbTrace registry = moRegistry.clone();

        if (registry.isRegistryNew()) {
            registry.setPkProjectId(moKeyProject.getValue()[0]);
        }

        registry.setTraceDate(moDateDate.getValue());
        registry.setNotes(moTextNotes.getValue());
        registry.setFkRequirementProjectId(moKeyProjectRequirement.getValue()[0]);
        registry.setFkRequirementRequirementId(moKeyProjectRequirement.getValue()[1]);
        registry.setFkPhaseProjectId(moKeyProjectStagePhase.getValue()[0]);
        registry.setFkPhaseStageId(moKeyProjectStagePhase.getValue()[1]);
        registry.setFkPhasePhaseId(moKeyProjectStagePhase.getValue()[2]);

        return registry;
    }

    @Override
    public SGuiValidation validateForm() {
        return moFields.validateFields();
    }
}
