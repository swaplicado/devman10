/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package devman.mod.dev.form;

import devman.gui.SGuiMainSessionCustom;
import devman.mod.SModConsts;
import devman.mod.SModSysConsts;
import devman.mod.dev.db.SDbTestPlanTest;
import sa.lib.SLibConsts;
import sa.lib.SLibUtils;
import sa.lib.db.SDbRegistry;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiConsts;
import sa.lib.gui.SGuiFieldKeyGroup;
import sa.lib.gui.SGuiUtils;
import sa.lib.gui.SGuiValidation;
import sa.lib.gui.bean.SBeanForm;

/**
 *
 * @author Juan Barajas, Sergio Flores
 */
public class SFormTestPlanTest extends SBeanForm {

    private SDbTestPlanTest moRegistry;
    private SGuiFieldKeyGroup moKeyGroupStageTestPlan;

    /**
     * Creates new form SFormTestPlanTest
     * @param client
     * @param title
     */
    public SFormTestPlanTest(SGuiClient client, String title) {
        setFormSettings(client, SGuiConsts.BEAN_FORM_EDIT, SModConsts.D_TST_PLN_TST, SLibConsts.UNDEFINED, title);
        initComponents();
        initComponentsCustom();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jlProject = new javax.swing.JLabel();
        moKeyProject = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel14 = new javax.swing.JPanel();
        jlProjectStage = new javax.swing.JLabel();
        moKeyProjectStage = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel10 = new javax.swing.JPanel();
        jlTestPlan = new javax.swing.JLabel();
        moKeyTestPlan = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel3 = new javax.swing.JPanel();
        jlCode = new javax.swing.JLabel();
        moTextCode = new sa.lib.gui.bean.SBeanFieldText();
        jPanel4 = new javax.swing.JPanel();
        jlName = new javax.swing.JLabel();
        moTextName = new sa.lib.gui.bean.SBeanFieldText();
        jPanel6 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jspDescription = new javax.swing.JScrollPane();
        jtaDescription = new javax.swing.JTextArea();
        jPanel9 = new javax.swing.JPanel();
        jlStatus = new javax.swing.JLabel();
        moKeyStatus = new sa.lib.gui.bean.SBeanFieldKey();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del registro:"));
        jPanel1.setLayout(new java.awt.BorderLayout(0, 5));

        jPanel2.setLayout(new java.awt.GridLayout(5, 0, 0, 5));

        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEADING, 5, 0));

        jlProject.setForeground(java.awt.Color.blue);
        jlProject.setText("Proyecto:*");
        jlProject.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel7.add(jlProject);

        moKeyProject.setPreferredSize(new java.awt.Dimension(400, 23));
        jPanel7.add(moKeyProject);

        jPanel2.add(jPanel7);

        jPanel14.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEADING, 5, 0));

        jlProjectStage.setForeground(java.awt.Color.blue);
        jlProjectStage.setText("Etapa:*");
        jlProjectStage.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel14.add(jlProjectStage);

        moKeyProjectStage.setPreferredSize(new java.awt.Dimension(400, 23));
        moKeyProjectStage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moKeyProjectStageActionPerformed(evt);
            }
        });
        jPanel14.add(moKeyProjectStage);

        jPanel2.add(jPanel14);

        jPanel10.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEADING, 5, 0));

        jlTestPlan.setForeground(java.awt.Color.blue);
        jlTestPlan.setText("Plan pruebas:*");
        jlTestPlan.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel10.add(jlTestPlan);

        moKeyTestPlan.setPreferredSize(new java.awt.Dimension(400, 23));
        jPanel10.add(moKeyTestPlan);

        jPanel2.add(jPanel10);

        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEADING, 5, 0));

        jlCode.setText("CÃ³digo:*");
        jlCode.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel3.add(jlCode);

        moTextCode.setPreferredSize(new java.awt.Dimension(150, 23));
        jPanel3.add(moTextCode);

        jPanel2.add(jPanel3);

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEADING, 5, 0));

        jlName.setText("Nombre:*");
        jlName.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel4.add(jlName);

        moTextName.setPreferredSize(new java.awt.Dimension(400, 23));
        jPanel4.add(moTextName);

        jPanel2.add(jPanel4);

        jPanel1.add(jPanel2, java.awt.BorderLayout.NORTH);

        jPanel6.setLayout(new java.awt.BorderLayout());

        jPanel11.setLayout(new java.awt.BorderLayout(0, 5));

        jPanel13.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jspDescription.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jspDescription.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jspDescription.setPreferredSize(new java.awt.Dimension(505, 150));

        jtaDescription.setColumns(20);
        jtaDescription.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        jtaDescription.setRows(5);
        jspDescription.setViewportView(jtaDescription);

        jPanel13.add(jspDescription);

        jPanel11.add(jPanel13, java.awt.BorderLayout.CENTER);

        jPanel9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEADING, 5, 0));

        jlStatus.setText("Estatus:*");
        jlStatus.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel9.add(jlStatus);

        moKeyStatus.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel9.add(moKeyStatus);

        jPanel11.add(jPanel9, java.awt.BorderLayout.PAGE_END);

        jPanel6.add(jPanel11, java.awt.BorderLayout.NORTH);

        jPanel1.add(jPanel6, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void moKeyProjectStageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moKeyProjectStageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_moKeyProjectStageActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JLabel jlCode;
    private javax.swing.JLabel jlName;
    private javax.swing.JLabel jlProject;
    private javax.swing.JLabel jlProjectStage;
    private javax.swing.JLabel jlStatus;
    private javax.swing.JLabel jlTestPlan;
    private javax.swing.JScrollPane jspDescription;
    private javax.swing.JTextArea jtaDescription;
    private sa.lib.gui.bean.SBeanFieldKey moKeyProject;
    private sa.lib.gui.bean.SBeanFieldKey moKeyProjectStage;
    private sa.lib.gui.bean.SBeanFieldKey moKeyStatus;
    private sa.lib.gui.bean.SBeanFieldKey moKeyTestPlan;
    private sa.lib.gui.bean.SBeanFieldText moTextCode;
    private sa.lib.gui.bean.SBeanFieldText moTextName;
    // End of variables declaration//GEN-END:variables

    /*
     * Private methods
     */

    private void initComponentsCustom() {
        SGuiUtils.setWindowBounds(this, 720, 450);

        moKeyProject.setKeySettings(miClient, SGuiUtils.getLabelName(jlProject), true);
        moKeyProjectStage.setKeySettings(miClient, SGuiUtils.getLabelName(jlProjectStage), true);
        moKeyTestPlan.setKeySettings(miClient, SGuiUtils.getLabelName(jlTestPlan), true);
        moTextCode.setTextSettings(SGuiUtils.getLabelName(jlCode), 25);
        moTextName.setTextSettings(SGuiUtils.getLabelName(jlName), 100);
        moKeyStatus.setKeySettings(miClient, SGuiUtils.getLabelName(jlStatus), true);

        moFields.addField(moKeyProject);
        moFields.addField(moKeyProjectStage);
        moFields.addField(moKeyTestPlan);
        moFields.addField(moTextCode);
        moFields.addField(moTextName);
        moFields.addField(moKeyStatus);

        moFields.setFormButton(jbSave);
        
        moKeyGroupStageTestPlan = new SGuiFieldKeyGroup(miClient);
    }

    /*
     * Public methods
     */

    /*
     * Overriden methods
     */

    @Override
    public void addAllListeners() {
    }

    @Override
    public void removeAllListeners() {
    }

    @Override
    public void reloadCatalogues() {
        moKeyGroupStageTestPlan.initGroup();
        moKeyGroupStageTestPlan.addFieldKey(moKeyProject, SModConsts.PU_PRJ, SLibConsts.UNDEFINED, null);
        moKeyGroupStageTestPlan.addFieldKey(moKeyProjectStage, SModConsts.PU_PRJ_STG, SLibConsts.UNDEFINED, null);
        moKeyGroupStageTestPlan.addFieldKey(moKeyTestPlan, SModConsts.D_TST_PLN, SLibConsts.UNDEFINED, null);
        moKeyGroupStageTestPlan.populateCatalogues();
        
        miClient.getSession().populateCatalogue(moKeyStatus, SModConsts.CS_ST, SModConsts.D_TST_PLN_TST, null);
    }

    @Override
    public void setRegistry(SDbRegistry registry) throws Exception {
        moRegistry = (SDbTestPlanTest) registry;

        mnFormResult = SLibConsts.UNDEFINED;
        mbFirstActivation = true;

        removeAllListeners();
        reloadCatalogues();

        if (moRegistry.isRegistryNew()) {
            //moRegistry.setCode("");
            
            if (moRegistry.getAuxFkStageProjectId() == SLibConsts.UNDEFINED) {
                moRegistry.setAuxFkStageProjectId(((SGuiMainSessionCustom) miClient.getSession().getSessionCustom()).getProjectStageKey()[0]);
                moRegistry.setAuxFkStageStageId(((SGuiMainSessionCustom) miClient.getSession().getSessionCustom()).getProjectStageKey()[1]);
                moRegistry.setFkTestStatusId(SModSysConsts.CS_ST_PND);
            }
            
            jtfRegistryKey.setText("");
        }
        else {
            jtfRegistryKey.setText(SLibUtils.textKey(moRegistry.getPrimaryKey()));
        }

        moKeyProject.setValue(new int[] { moRegistry.getAuxFkStageProjectId() });
        moKeyProjectStage.setValue(new int[] { moRegistry.getAuxFkStageProjectId(), moRegistry.getAuxFkStageStageId() });
        moKeyTestPlan.setValue(new int[] { moRegistry.getPkPlanId() });
        moTextCode.setValue(moRegistry.getCode());
        moTextName.setValue(moRegistry.getName());
        jtaDescription.setText(moRegistry.getDescription());
        jtaDescription.setCaretPosition(0);
        moKeyStatus.setValue(new int[] { moRegistry.getFkTestStatusId() });

        setFormEditable(true);
        
        moTextCode.setEditable(false);
        
        if (moRegistry.isRegistryNew()) {
            if (moRegistry.getAuxFkStageProjectId() == SLibConsts.UNDEFINED) {
                moKeyGroupStageTestPlan.resetGroup();
            }
            else {
                moKeyTestPlan.setEnabled(moKeyTestPlan.getItemCount() > 0);
            }
        }
        else {
            moKeyProject.setEnabled(false);
            moKeyProjectStage.setEnabled(false);
            moKeyTestPlan.setEnabled(false);
        }
        
        addAllListeners();
    }

    @Override
    public SDbTestPlanTest getRegistry() throws Exception {
        SDbTestPlanTest registry = moRegistry.clone();

        if (registry.isRegistryNew()) {
            registry.setPkPlanId(moKeyTestPlan.getValue()[0]);
        }

        registry.setCode(moTextCode.getValue());
        registry.setName(moTextName.getValue());
        registry.setDescription(SLibUtils.textTrim(jtaDescription.getText()).replaceAll("'", "''"));
        registry.setFkTestStatusId(moKeyStatus.getValue()[0]);

        return registry;
    }

    @Override
    public SGuiValidation validateForm() {
        return moFields.validateFields();
    }
}
