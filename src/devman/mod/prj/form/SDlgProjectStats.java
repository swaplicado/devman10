/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package devman.mod.prj.form;

import devman.SDevManConsts;
import devman.mod.SModConsts;
import devman.mod.SModSysConsts;
import devman.mod.prj.db.SDbProject;
import devman.mod.prj.db.SPrjStatsBasic;
import devman.mod.prj.db.SPrjStatsCutoff;
import devman.mod.prj.db.SPrjUtils;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JProgressBar;
import sa.lib.SLibConsts;
import sa.lib.SLibUtils;
import sa.lib.db.SDbRegistry;
import sa.lib.gui.SGuiClient;
import sa.lib.gui.SGuiConsts;
import sa.lib.gui.SGuiParams;
import sa.lib.gui.SGuiUtils;
import sa.lib.gui.SGuiValidation;
import sa.lib.gui.bean.SBeanFormDialog;

/**
 *
 * @author Sergio Flores
 */
public class SDlgProjectStats extends SBeanFormDialog implements ActionListener {
    
    private SDbProject moRegistry;

    /**
     * Creates new form SDlgProjectStats
     */
    public SDlgProjectStats(SGuiClient client, String title) {
        setFormSettings(client, SGuiConsts.BEAN_FORM_EDIT, SModConsts.PX_PRJ_STA, SLibConsts.UNDEFINED, title);
        initComponents();
        initComponentsCustom();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jlCode = new javax.swing.JLabel();
        jtfCode = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jlName = new javax.swing.JLabel();
        jtfName = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jlType = new javax.swing.JLabel();
        jtfType = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jlStatus = new javax.swing.JLabel();
        jtfStatus = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jlDateStartPlanned = new javax.swing.JLabel();
        moDateStartPlanned = new sa.lib.gui.bean.SBeanFieldDate();
        jlDummy1 = new javax.swing.JLabel();
        jlDateStartReal = new javax.swing.JLabel();
        moDateStartReal = new sa.lib.gui.bean.SBeanFieldDate();
        jPanel7 = new javax.swing.JPanel();
        jlDateEndPlanned = new javax.swing.JLabel();
        moDateEndPlanned = new sa.lib.gui.bean.SBeanFieldDate();
        jlDummy2 = new javax.swing.JLabel();
        jlDateEndReal = new javax.swing.JLabel();
        moDateEndReal = new sa.lib.gui.bean.SBeanFieldDate();
        jPanel10 = new javax.swing.JPanel();
        jlTimePlanned = new javax.swing.JLabel();
        moCompTimePlanned = new sa.lib.gui.bean.SBeanCompoundField();
        jlTimeReal = new javax.swing.JLabel();
        moCompTimeReal = new sa.lib.gui.bean.SBeanCompoundField();
        jPanel14 = new javax.swing.JPanel();
        jlUser = new javax.swing.JLabel();
        jtfUser = new javax.swing.JTextField();
        jPanel23 = new javax.swing.JPanel();
        jPanel30 = new javax.swing.JPanel();
        jlDateQuery = new javax.swing.JLabel();
        moDateQuery = new sa.lib.gui.bean.SBeanFieldDate();
        jPanel24 = new javax.swing.JPanel();
        jlDummy3 = new javax.swing.JLabel();
        jlStatsTimePlan = new javax.swing.JLabel();
        jlStatsTimePerc = new javax.swing.JLabel();
        jlStatsTimeReal = new javax.swing.JLabel();
        jPanel25 = new javax.swing.JPanel();
        jlStatsTimePnd = new javax.swing.JLabel();
        moCompStatsTimePlanPnd = new sa.lib.gui.bean.SBeanCompoundField();
        moDecStatsTimePercPnd = new sa.lib.gui.bean.SBeanFieldDecimal();
        moCompStatsTimeRealPnd = new sa.lib.gui.bean.SBeanCompoundField();
        jPanel26 = new javax.swing.JPanel();
        jlStatsTimePrc = new javax.swing.JLabel();
        moCompStatsTimePlanPrc = new sa.lib.gui.bean.SBeanCompoundField();
        moDecStatsTimePercPrc = new sa.lib.gui.bean.SBeanFieldDecimal();
        moCompStatsTimeRealPrc = new sa.lib.gui.bean.SBeanCompoundField();
        jPanel27 = new javax.swing.JPanel();
        jlStatsTimeFin = new javax.swing.JLabel();
        moCompStatsTimePlanFin = new sa.lib.gui.bean.SBeanCompoundField();
        moDecStatsTimePercFin = new sa.lib.gui.bean.SBeanFieldDecimal();
        moCompStatsTimeRealFin = new sa.lib.gui.bean.SBeanCompoundField();
        jPanel29 = new javax.swing.JPanel();
        jlStatsTimeCan = new javax.swing.JLabel();
        moCompStatsTimePlanCan = new sa.lib.gui.bean.SBeanCompoundField();
        moDecStatsTimePercCan = new sa.lib.gui.bean.SBeanFieldDecimal();
        moCompStatsTimeRealCan = new sa.lib.gui.bean.SBeanCompoundField();
        jPanel28 = new javax.swing.JPanel();
        jlStatsTime = new javax.swing.JLabel();
        moCompStatsTimePlan = new sa.lib.gui.bean.SBeanCompoundField();
        moDecStatsTimePerc = new sa.lib.gui.bean.SBeanFieldDecimal();
        moCompStatsTimeReal = new sa.lib.gui.bean.SBeanCompoundField();
        jPanel31 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jPanel32 = new javax.swing.JPanel();
        jlProjectStage = new javax.swing.JLabel();
        moKeyProjectStage = new sa.lib.gui.bean.SBeanFieldKey();
        jPanel12 = new javax.swing.JPanel();
        jlCutoff = new javax.swing.JLabel();
        moDateCutoff = new sa.lib.gui.bean.SBeanFieldDate();
        jbStatsCutoffCompute = new javax.swing.JButton();
        jbStatsCutoffClear = new javax.swing.JButton();
        jPanel33 = new javax.swing.JPanel();
        jlDateStartPlanned1 = new javax.swing.JLabel();
        moDateStatsStartPlanned = new sa.lib.gui.bean.SBeanFieldDate();
        moDateStatsEndPlanned = new sa.lib.gui.bean.SBeanFieldDate();
        jPanel13 = new javax.swing.JPanel();
        jlDaysPlanned = new javax.swing.JLabel();
        moCompDaysPlanned = new sa.lib.gui.bean.SBeanCompoundField();
        jPanel19 = new javax.swing.JPanel();
        jlDaysElapsed = new javax.swing.JLabel();
        moCompDaysElapsed = new sa.lib.gui.bean.SBeanCompoundField();
        jlDaysElapsedProgress = new javax.swing.JLabel();
        moDecDaysElapsedProgress = new sa.lib.gui.bean.SBeanFieldDecimal();
        jpbDaysElapsedProgress = new javax.swing.JProgressBar();
        jlDaysToElapsed = new javax.swing.JLabel();
        moCompDaysToElapse = new sa.lib.gui.bean.SBeanCompoundField();
        jPanel17 = new javax.swing.JPanel();
        jlWorkPlanned = new javax.swing.JLabel();
        moCompWorkPlanned = new sa.lib.gui.bean.SBeanCompoundField();
        jPanel15 = new javax.swing.JPanel();
        jlWorkElapsed = new javax.swing.JLabel();
        moCompWorkElapsed = new sa.lib.gui.bean.SBeanCompoundField();
        jlWorkElapsedProgress = new javax.swing.JLabel();
        moDecWorkElapsedProgress = new sa.lib.gui.bean.SBeanFieldDecimal();
        jpbWorkElapsedProgress = new javax.swing.JProgressBar();
        jPanel16 = new javax.swing.JPanel();
        jlWorkFinished = new javax.swing.JLabel();
        moCompWorkFinished = new sa.lib.gui.bean.SBeanCompoundField();
        jlWorkFinishedProgress = new javax.swing.JLabel();
        moDecWorkFinishedProgress = new sa.lib.gui.bean.SBeanFieldDecimal();
        jpbWorkFinishedProgress = new javax.swing.JProgressBar();
        jPanel21 = new javax.swing.JPanel();
        jlWorkGap = new javax.swing.JLabel();
        moCompWorkGap = new sa.lib.gui.bean.SBeanCompoundField();
        jlWorkGapPercentage = new javax.swing.JLabel();
        moDecWorkGapPercentage = new sa.lib.gui.bean.SBeanFieldDecimal();
        jPanel20 = new javax.swing.JPanel();
        jlEffortRequired = new javax.swing.JLabel();
        moCompEffortRequired = new sa.lib.gui.bean.SBeanCompoundField();
        jPanel22 = new javax.swing.JPanel();
        jlEffortEfficiency = new javax.swing.JLabel();
        moCompEffortEfficiency = new sa.lib.gui.bean.SBeanCompoundField();
        jlEffortEfficiencyPercentage = new javax.swing.JLabel();
        moDecEffortEfficiencyPercentage = new sa.lib.gui.bean.SBeanFieldDecimal();

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel18.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del proyecto:"));
        jPanel18.setLayout(new java.awt.BorderLayout(5, 0));

        jPanel2.setLayout(new java.awt.GridLayout(8, 1, 0, 5));

        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlCode.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jlCode.setText("CÃ³digo:");
        jlCode.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel4.add(jlCode);

        jtfCode.setEditable(false);
        jtfCode.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jtfCode.setFocusable(false);
        jtfCode.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel4.add(jtfCode);

        jPanel2.add(jPanel4);

        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlName.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jlName.setText("Nombre:");
        jlName.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel5.add(jlName);

        jtfName.setEditable(false);
        jtfName.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jtfName.setFocusable(false);
        jtfName.setPreferredSize(new java.awt.Dimension(400, 23));
        jPanel5.add(jtfName);

        jPanel2.add(jPanel5);

        jPanel9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlType.setText("Tipo:");
        jlType.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel9.add(jlType);

        jtfType.setEditable(false);
        jtfType.setFocusable(false);
        jtfType.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel9.add(jtfType);

        jPanel2.add(jPanel9);

        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlStatus.setText("Estatus:");
        jlStatus.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel8.add(jlStatus);

        jtfStatus.setEditable(false);
        jtfStatus.setFocusable(false);
        jtfStatus.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel8.add(jtfStatus);

        jPanel2.add(jPanel8);

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlDateStartPlanned.setText("Inicio planeado:");
        jlDateStartPlanned.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel6.add(jlDateStartPlanned);

        moDateStartPlanned.setEditable(false);
        moDateStartPlanned.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel6.add(moDateStartPlanned);

        jlDummy1.setPreferredSize(new java.awt.Dimension(35, 23));
        jPanel6.add(jlDummy1);

        jlDateStartReal.setText("Inicio real:");
        jlDateStartReal.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel6.add(jlDateStartReal);

        moDateStartReal.setEditable(false);
        moDateStartReal.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel6.add(moDateStartReal);

        jPanel2.add(jPanel6);

        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlDateEndPlanned.setText("Fin planeado:");
        jlDateEndPlanned.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel7.add(jlDateEndPlanned);

        moDateEndPlanned.setEditable(false);
        moDateEndPlanned.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel7.add(moDateEndPlanned);

        jlDummy2.setPreferredSize(new java.awt.Dimension(35, 23));
        jPanel7.add(jlDummy2);

        jlDateEndReal.setText("Fin real:");
        jlDateEndReal.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel7.add(jlDateEndReal);

        moDateEndReal.setEditable(false);
        moDateEndReal.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel7.add(moDateEndReal);

        jPanel2.add(jPanel7);

        jPanel10.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlTimePlanned.setText("Tiempo planeado:");
        jlTimePlanned.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel10.add(jlTimePlanned);

        moCompTimePlanned.setEditable(false);
        jPanel10.add(moCompTimePlanned);

        jlTimeReal.setText("Tiempo real:");
        jlTimeReal.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel10.add(jlTimeReal);

        moCompTimeReal.setEditable(false);
        jPanel10.add(moCompTimeReal);

        jPanel2.add(jPanel10);

        jPanel14.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlUser.setText("Responsable:");
        jlUser.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel14.add(jlUser);

        jtfUser.setEditable(false);
        jtfUser.setFocusable(false);
        jtfUser.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel14.add(jtfUser);

        jPanel2.add(jPanel14);

        jPanel18.add(jPanel2, java.awt.BorderLayout.WEST);

        jPanel23.setLayout(new java.awt.GridLayout(8, 1, 0, 5));

        jPanel30.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlDateQuery.setText("Fecha consulta:");
        jlDateQuery.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel30.add(jlDateQuery);

        moDateQuery.setEditable(false);
        jPanel30.add(moDateQuery);

        jPanel23.add(jPanel30);

        jPanel24.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlDummy3.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel24.add(jlDummy3);

        jlStatsTimePlan.setText("Tiempo planeado:");
        jlStatsTimePlan.setPreferredSize(new java.awt.Dimension(140, 23));
        jPanel24.add(jlStatsTimePlan);

        jlStatsTimePerc.setText("Porcentaje:");
        jlStatsTimePerc.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel24.add(jlStatsTimePerc);

        jlStatsTimeReal.setText("Tiempo real:");
        jlStatsTimeReal.setPreferredSize(new java.awt.Dimension(140, 23));
        jPanel24.add(jlStatsTimeReal);

        jPanel23.add(jPanel24);

        jPanel25.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlStatsTimePnd.setText("Trab. pendiente:");
        jlStatsTimePnd.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel25.add(jlStatsTimePnd);

        moCompStatsTimePlanPnd.setEditable(false);
        jPanel25.add(moCompStatsTimePlanPnd);

        moDecStatsTimePercPnd.setEditable(false);
        moDecStatsTimePercPnd.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel25.add(moDecStatsTimePercPnd);

        moCompStatsTimeRealPnd.setEditable(false);
        jPanel25.add(moCompStatsTimeRealPnd);

        jPanel23.add(jPanel25);

        jPanel26.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlStatsTimePrc.setText("Trab. en proceso:");
        jlStatsTimePrc.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel26.add(jlStatsTimePrc);

        moCompStatsTimePlanPrc.setEditable(false);
        jPanel26.add(moCompStatsTimePlanPrc);

        moDecStatsTimePercPrc.setEditable(false);
        moDecStatsTimePercPrc.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel26.add(moDecStatsTimePercPrc);

        moCompStatsTimeRealPrc.setEditable(false);
        jPanel26.add(moCompStatsTimeRealPrc);

        jPanel23.add(jPanel26);

        jPanel27.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlStatsTimeFin.setText("Trab. terminado:");
        jlStatsTimeFin.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel27.add(jlStatsTimeFin);

        moCompStatsTimePlanFin.setEditable(false);
        jPanel27.add(moCompStatsTimePlanFin);

        moDecStatsTimePercFin.setEditable(false);
        moDecStatsTimePercFin.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel27.add(moDecStatsTimePercFin);

        moCompStatsTimeRealFin.setEditable(false);
        jPanel27.add(moCompStatsTimeRealFin);

        jPanel23.add(jPanel27);

        jPanel29.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlStatsTimeCan.setText("Trab. cancelado:");
        jlStatsTimeCan.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel29.add(jlStatsTimeCan);

        moCompStatsTimePlanCan.setEditable(false);
        jPanel29.add(moCompStatsTimePlanCan);

        moDecStatsTimePercCan.setEditable(false);
        moDecStatsTimePercCan.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel29.add(moDecStatsTimePercCan);

        moCompStatsTimeRealCan.setEditable(false);
        jPanel29.add(moCompStatsTimeRealCan);

        jPanel23.add(jPanel29);

        jPanel28.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlStatsTime.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jlStatsTime.setText("Total proyecto:");
        jlStatsTime.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel28.add(jlStatsTime);

        moCompStatsTimePlan.setEditable(false);
        jPanel28.add(moCompStatsTimePlan);

        moDecStatsTimePerc.setEditable(false);
        moDecStatsTimePerc.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel28.add(moDecStatsTimePerc);

        moCompStatsTimeReal.setEditable(false);
        jPanel28.add(moCompStatsTimeReal);

        jPanel23.add(jPanel28);

        jPanel31.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));
        jPanel23.add(jPanel31);

        jPanel18.add(jPanel23, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel18, java.awt.BorderLayout.NORTH);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("EstadÃ­sticas del proyecto:"));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel11.setLayout(new java.awt.GridLayout(11, 1, 0, 5));

        jPanel32.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlProjectStage.setText("Etapa:");
        jlProjectStage.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel32.add(jlProjectStage);

        moKeyProjectStage.setPreferredSize(new java.awt.Dimension(200, 23));
        jPanel32.add(moKeyProjectStage);

        jPanel11.add(jPanel32);

        jPanel12.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlCutoff.setText("Fecha corte:*");
        jlCutoff.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel12.add(jlCutoff);

        moDateCutoff.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel12.add(moDateCutoff);

        jbStatsCutoffCompute.setText("Actualizar");
        jbStatsCutoffCompute.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel12.add(jbStatsCutoffCompute);

        jbStatsCutoffClear.setText("Limpiar");
        jbStatsCutoffClear.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel12.add(jbStatsCutoffClear);

        jPanel11.add(jPanel12);

        jPanel33.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlDateStartPlanned1.setText("PerÃ­odo analizado:");
        jlDateStartPlanned1.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel33.add(jlDateStartPlanned1);

        moDateStatsStartPlanned.setEditable(false);
        moDateStatsStartPlanned.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel33.add(moDateStatsStartPlanned);

        moDateStatsEndPlanned.setEditable(false);
        moDateStatsEndPlanned.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel33.add(moDateStatsEndPlanned);

        jPanel11.add(jPanel33);

        jPanel13.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlDaysPlanned.setText("DÃ­as planeados:");
        jlDaysPlanned.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel13.add(jlDaysPlanned);

        moCompDaysPlanned.setEditable(false);
        jPanel13.add(moCompDaysPlanned);

        jPanel11.add(jPanel13);

        jPanel19.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlDaysElapsed.setText("DÃ­as transcurridos:");
        jlDaysElapsed.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel19.add(jlDaysElapsed);

        moCompDaysElapsed.setEditable(false);
        jPanel19.add(moCompDaysElapsed);

        jlDaysElapsedProgress.setText("Avance calendario:");
        jlDaysElapsedProgress.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel19.add(jlDaysElapsedProgress);

        moDecDaysElapsedProgress.setEditable(false);
        moDecDaysElapsedProgress.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel19.add(moDecDaysElapsedProgress);

        jpbDaysElapsedProgress.setPreferredSize(new java.awt.Dimension(150, 23));
        jpbDaysElapsedProgress.setStringPainted(true);
        jPanel19.add(jpbDaysElapsedProgress);

        jlDaysToElapsed.setText("DÃ­as por transcurrir:");
        jlDaysToElapsed.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel19.add(jlDaysToElapsed);

        moCompDaysToElapse.setEditable(false);
        jPanel19.add(moCompDaysToElapse);

        jPanel11.add(jPanel19);

        jPanel17.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlWorkPlanned.setText("Trab. planeado:");
        jlWorkPlanned.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel17.add(jlWorkPlanned);

        moCompWorkPlanned.setEditable(false);
        jPanel17.add(moCompWorkPlanned);

        jPanel11.add(jPanel17);

        jPanel15.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlWorkElapsed.setText("Trab. transcurrido:");
        jlWorkElapsed.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel15.add(jlWorkElapsed);

        moCompWorkElapsed.setEditable(false);
        jPanel15.add(moCompWorkElapsed);

        jlWorkElapsedProgress.setText("Prog. transcurrido:");
        jlWorkElapsedProgress.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel15.add(jlWorkElapsedProgress);

        moDecWorkElapsedProgress.setEditable(false);
        moDecWorkElapsedProgress.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel15.add(moDecWorkElapsedProgress);

        jpbWorkElapsedProgress.setPreferredSize(new java.awt.Dimension(150, 23));
        jpbWorkElapsedProgress.setStringPainted(true);
        jPanel15.add(jpbWorkElapsedProgress);

        jPanel11.add(jPanel15);

        jPanel16.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlWorkFinished.setText("Trab. terminado:");
        jlWorkFinished.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel16.add(jlWorkFinished);

        moCompWorkFinished.setEditable(false);
        jPanel16.add(moCompWorkFinished);

        jlWorkFinishedProgress.setText("Prog. terminado:");
        jlWorkFinishedProgress.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel16.add(jlWorkFinishedProgress);

        moDecWorkFinishedProgress.setEditable(false);
        moDecWorkFinishedProgress.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel16.add(moDecWorkFinishedProgress);

        jpbWorkFinishedProgress.setPreferredSize(new java.awt.Dimension(150, 23));
        jpbWorkFinishedProgress.setStringPainted(true);
        jPanel16.add(jpbWorkFinishedProgress);

        jPanel11.add(jPanel16);

        jPanel21.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlWorkGap.setText("Brecha trab. transcurrido:");
        jlWorkGap.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel21.add(jlWorkGap);

        moCompWorkGap.setEditable(false);
        jPanel21.add(moCompWorkGap);

        jlWorkGapPercentage.setText("Brecha trab. transcurrido:");
        jlWorkGapPercentage.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel21.add(jlWorkGapPercentage);

        moDecWorkGapPercentage.setEditable(false);
        moDecWorkGapPercentage.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel21.add(moDecWorkGapPercentage);

        jPanel11.add(jPanel21);

        jPanel20.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlEffortRequired.setText("Esfuerzo requerido:");
        jlEffortRequired.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel20.add(jlEffortRequired);

        moCompEffortRequired.setEditable(false);
        jPanel20.add(moCompEffortRequired);

        jPanel11.add(jPanel20);

        jPanel22.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 0));

        jlEffortEfficiency.setText("Eficiencia esfuerzo:");
        jlEffortEfficiency.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel22.add(jlEffortEfficiency);

        moCompEffortEfficiency.setEditable(false);
        jPanel22.add(moCompEffortEfficiency);

        jlEffortEfficiencyPercentage.setText("Eficiencia esfuerzo:");
        jlEffortEfficiencyPercentage.setPreferredSize(new java.awt.Dimension(100, 23));
        jPanel22.add(jlEffortEfficiencyPercentage);

        moDecEffortEfficiencyPercentage.setEditable(false);
        moDecEffortEfficiencyPercentage.setPreferredSize(new java.awt.Dimension(75, 23));
        jPanel22.add(moDecEffortEfficiencyPercentage);

        jPanel11.add(jPanel22);

        jPanel3.add(jPanel11, java.awt.BorderLayout.PAGE_START);

        jPanel1.add(jPanel3, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JButton jbStatsCutoffClear;
    private javax.swing.JButton jbStatsCutoffCompute;
    private javax.swing.JLabel jlCode;
    private javax.swing.JLabel jlCutoff;
    private javax.swing.JLabel jlDateEndPlanned;
    private javax.swing.JLabel jlDateEndReal;
    private javax.swing.JLabel jlDateQuery;
    private javax.swing.JLabel jlDateStartPlanned;
    private javax.swing.JLabel jlDateStartPlanned1;
    private javax.swing.JLabel jlDateStartReal;
    private javax.swing.JLabel jlDaysElapsed;
    private javax.swing.JLabel jlDaysElapsedProgress;
    private javax.swing.JLabel jlDaysPlanned;
    private javax.swing.JLabel jlDaysToElapsed;
    private javax.swing.JLabel jlDummy1;
    private javax.swing.JLabel jlDummy2;
    private javax.swing.JLabel jlDummy3;
    private javax.swing.JLabel jlEffortEfficiency;
    private javax.swing.JLabel jlEffortEfficiencyPercentage;
    private javax.swing.JLabel jlEffortRequired;
    private javax.swing.JLabel jlName;
    private javax.swing.JLabel jlProjectStage;
    private javax.swing.JLabel jlStatsTime;
    private javax.swing.JLabel jlStatsTimeCan;
    private javax.swing.JLabel jlStatsTimeFin;
    private javax.swing.JLabel jlStatsTimePerc;
    private javax.swing.JLabel jlStatsTimePlan;
    private javax.swing.JLabel jlStatsTimePnd;
    private javax.swing.JLabel jlStatsTimePrc;
    private javax.swing.JLabel jlStatsTimeReal;
    private javax.swing.JLabel jlStatus;
    private javax.swing.JLabel jlTimePlanned;
    private javax.swing.JLabel jlTimeReal;
    private javax.swing.JLabel jlType;
    private javax.swing.JLabel jlUser;
    private javax.swing.JLabel jlWorkElapsed;
    private javax.swing.JLabel jlWorkElapsedProgress;
    private javax.swing.JLabel jlWorkFinished;
    private javax.swing.JLabel jlWorkFinishedProgress;
    private javax.swing.JLabel jlWorkGap;
    private javax.swing.JLabel jlWorkGapPercentage;
    private javax.swing.JLabel jlWorkPlanned;
    private javax.swing.JProgressBar jpbDaysElapsedProgress;
    private javax.swing.JProgressBar jpbWorkElapsedProgress;
    private javax.swing.JProgressBar jpbWorkFinishedProgress;
    private javax.swing.JTextField jtfCode;
    private javax.swing.JTextField jtfName;
    private javax.swing.JTextField jtfStatus;
    private javax.swing.JTextField jtfType;
    private javax.swing.JTextField jtfUser;
    private sa.lib.gui.bean.SBeanCompoundField moCompDaysElapsed;
    private sa.lib.gui.bean.SBeanCompoundField moCompDaysPlanned;
    private sa.lib.gui.bean.SBeanCompoundField moCompDaysToElapse;
    private sa.lib.gui.bean.SBeanCompoundField moCompEffortEfficiency;
    private sa.lib.gui.bean.SBeanCompoundField moCompEffortRequired;
    private sa.lib.gui.bean.SBeanCompoundField moCompStatsTimePlan;
    private sa.lib.gui.bean.SBeanCompoundField moCompStatsTimePlanCan;
    private sa.lib.gui.bean.SBeanCompoundField moCompStatsTimePlanFin;
    private sa.lib.gui.bean.SBeanCompoundField moCompStatsTimePlanPnd;
    private sa.lib.gui.bean.SBeanCompoundField moCompStatsTimePlanPrc;
    private sa.lib.gui.bean.SBeanCompoundField moCompStatsTimeReal;
    private sa.lib.gui.bean.SBeanCompoundField moCompStatsTimeRealCan;
    private sa.lib.gui.bean.SBeanCompoundField moCompStatsTimeRealFin;
    private sa.lib.gui.bean.SBeanCompoundField moCompStatsTimeRealPnd;
    private sa.lib.gui.bean.SBeanCompoundField moCompStatsTimeRealPrc;
    private sa.lib.gui.bean.SBeanCompoundField moCompTimePlanned;
    private sa.lib.gui.bean.SBeanCompoundField moCompTimeReal;
    private sa.lib.gui.bean.SBeanCompoundField moCompWorkElapsed;
    private sa.lib.gui.bean.SBeanCompoundField moCompWorkFinished;
    private sa.lib.gui.bean.SBeanCompoundField moCompWorkGap;
    private sa.lib.gui.bean.SBeanCompoundField moCompWorkPlanned;
    private sa.lib.gui.bean.SBeanFieldDate moDateCutoff;
    private sa.lib.gui.bean.SBeanFieldDate moDateEndPlanned;
    private sa.lib.gui.bean.SBeanFieldDate moDateEndReal;
    private sa.lib.gui.bean.SBeanFieldDate moDateQuery;
    private sa.lib.gui.bean.SBeanFieldDate moDateStartPlanned;
    private sa.lib.gui.bean.SBeanFieldDate moDateStartReal;
    private sa.lib.gui.bean.SBeanFieldDate moDateStatsEndPlanned;
    private sa.lib.gui.bean.SBeanFieldDate moDateStatsStartPlanned;
    private sa.lib.gui.bean.SBeanFieldDecimal moDecDaysElapsedProgress;
    private sa.lib.gui.bean.SBeanFieldDecimal moDecEffortEfficiencyPercentage;
    private sa.lib.gui.bean.SBeanFieldDecimal moDecStatsTimePerc;
    private sa.lib.gui.bean.SBeanFieldDecimal moDecStatsTimePercCan;
    private sa.lib.gui.bean.SBeanFieldDecimal moDecStatsTimePercFin;
    private sa.lib.gui.bean.SBeanFieldDecimal moDecStatsTimePercPnd;
    private sa.lib.gui.bean.SBeanFieldDecimal moDecStatsTimePercPrc;
    private sa.lib.gui.bean.SBeanFieldDecimal moDecWorkElapsedProgress;
    private sa.lib.gui.bean.SBeanFieldDecimal moDecWorkFinishedProgress;
    private sa.lib.gui.bean.SBeanFieldDecimal moDecWorkGapPercentage;
    private sa.lib.gui.bean.SBeanFieldKey moKeyProjectStage;
    // End of variables declaration//GEN-END:variables

    /*
     * Private methods
     */
    
    private void initComponentsCustom() {
        SGuiUtils.setWindowBounds(this, 1040, 650);
        
        // Project info:
        
        moDateStartPlanned.setDateSettings(miClient, SGuiUtils.getLabelName(jlDateStartPlanned), false);
        moDateStartReal.setDateSettings(miClient, SGuiUtils.getLabelName(jlDateStartReal), false);
        moDateEndPlanned.setDateSettings(miClient, SGuiUtils.getLabelName(jlDateEndPlanned), false);
        moDateEndReal.setDateSettings(miClient, SGuiUtils.getLabelName(jlDateEndReal), false);
        
        moCompTimePlanned.getField().setDecimalSettings("", SGuiConsts.GUI_TYPE_DEC_QTY, false);
        moCompTimeReal.getField().setDecimalSettings("", SGuiConsts.GUI_TYPE_DEC_QTY, false);
        
        moCompTimePlanned.setCompoundText(SDevManConsts.MAN_HRS);
        moCompTimeReal.setCompoundText(SDevManConsts.MAN_HRS);
        
        // Project basic statistics:
        
        moCompStatsTimePlanPnd.getField().setDecimalSettings("", SGuiConsts.GUI_TYPE_DEC_QTY, false);
        moCompStatsTimePlanPrc.getField().setDecimalSettings("", SGuiConsts.GUI_TYPE_DEC_QTY, false);
        moCompStatsTimePlanFin.getField().setDecimalSettings("", SGuiConsts.GUI_TYPE_DEC_QTY, false);
        moCompStatsTimePlanCan.getField().setDecimalSettings("", SGuiConsts.GUI_TYPE_DEC_QTY, false);
        moCompStatsTimePlan.getField().setDecimalSettings("", SGuiConsts.GUI_TYPE_DEC_QTY, false);
        moCompStatsTimeRealPnd.getField().setDecimalSettings("", SGuiConsts.GUI_TYPE_DEC_QTY, false);
        moCompStatsTimeRealPrc.getField().setDecimalSettings("", SGuiConsts.GUI_TYPE_DEC_QTY, false);
        moCompStatsTimeRealFin.getField().setDecimalSettings("", SGuiConsts.GUI_TYPE_DEC_QTY, false);
        moCompStatsTimeRealCan.getField().setDecimalSettings("", SGuiConsts.GUI_TYPE_DEC_QTY, false);
        moCompStatsTimeReal.getField().setDecimalSettings("", SGuiConsts.GUI_TYPE_DEC_QTY, false);
        moDecStatsTimePercPnd.setDecimalSettings("", SGuiConsts.GUI_TYPE_DEC_PER_DISC, false);
        moDecStatsTimePercPrc.setDecimalSettings("", SGuiConsts.GUI_TYPE_DEC_PER_DISC, false);
        moDecStatsTimePercFin.setDecimalSettings("", SGuiConsts.GUI_TYPE_DEC_PER_DISC, false);
        moDecStatsTimePercCan.setDecimalSettings("", SGuiConsts.GUI_TYPE_DEC_PER_DISC, false);
        moDecStatsTimePerc.setDecimalSettings("", SGuiConsts.GUI_TYPE_DEC_PER_DISC, false);
        
        moCompStatsTimePlanPnd.setCompoundText(SDevManConsts.MAN_HRS);
        moCompStatsTimePlanPrc.setCompoundText(SDevManConsts.MAN_HRS);
        moCompStatsTimePlanFin.setCompoundText(SDevManConsts.MAN_HRS);
        moCompStatsTimePlanCan.setCompoundText(SDevManConsts.MAN_HRS);
        moCompStatsTimePlan.setCompoundText(SDevManConsts.MAN_HRS);
        moCompStatsTimeRealPnd.setCompoundText(SDevManConsts.MAN_HRS);
        moCompStatsTimeRealPrc.setCompoundText(SDevManConsts.MAN_HRS);
        moCompStatsTimeRealFin.setCompoundText(SDevManConsts.MAN_HRS);
        moCompStatsTimeRealCan.setCompoundText(SDevManConsts.MAN_HRS);
        moCompStatsTimeReal.setCompoundText(SDevManConsts.MAN_HRS);
        
        // Project cutoff statistics:
        
        moKeyProjectStage.setKeySettings(miClient, SGuiUtils.getLabelName(jlProjectStage), false);
        moDateCutoff.setDateSettings(miClient, SGuiUtils.getLabelName(jlCutoff), false);
        
        moCompDaysPlanned.getField().setDecimalSettings("", SGuiConsts.GUI_TYPE_DEC_AMT, false);
        moCompDaysElapsed.getField().setDecimalSettings("", SGuiConsts.GUI_TYPE_DEC_AMT, false);
        moCompDaysToElapse.getField().setDecimalSettings("", SGuiConsts.GUI_TYPE_DEC_AMT, false);
        moCompWorkPlanned.getField().setDecimalSettings("", SGuiConsts.GUI_TYPE_DEC_QTY, false);
        moCompWorkElapsed.getField().setDecimalSettings("", SGuiConsts.GUI_TYPE_DEC_QTY, false);
        moCompWorkFinished.getField().setDecimalSettings("", SGuiConsts.GUI_TYPE_DEC_QTY, false);
        moCompWorkGap.getField().setDecimalSettings("", SGuiConsts.GUI_TYPE_DEC_QTY, false);
        moCompEffortRequired.getField().setDecimalSettings("", SGuiConsts.GUI_TYPE_DEC_QTY, false);
        moCompEffortEfficiency.getField().setDecimalSettings("", SGuiConsts.GUI_TYPE_DEC_QTY, false);
        
        moCompDaysPlanned.setCompoundText(SDevManConsts.DAYS);
        moCompDaysElapsed.setCompoundText(SDevManConsts.DAYS);
        moCompDaysToElapse.setCompoundText(SDevManConsts.DAYS);
        moCompWorkPlanned.setCompoundText(SDevManConsts.MAN_HRS);
        moCompWorkElapsed.setCompoundText(SDevManConsts.MAN_HRS);
        moCompWorkFinished.setCompoundText(SDevManConsts.MAN_HRS);
        moCompWorkGap.setCompoundText(SDevManConsts.MAN_HRS);
        moCompEffortRequired.setCompoundText(SDevManConsts.MAN_HRS);
        moCompEffortEfficiency.setCompoundText(SDevManConsts.MAN_HRS);
        
        moDecDaysElapsedProgress.setDecimalSettings("", SGuiConsts.GUI_TYPE_DEC_PER_DISC, false);
        moDecWorkElapsedProgress.setDecimalSettings("", SGuiConsts.GUI_TYPE_DEC_PER_DISC, false);
        moDecWorkFinishedProgress.setDecimalSettings("", SGuiConsts.GUI_TYPE_DEC_PER_DISC, false);
        moDecWorkGapPercentage.setDecimalSettings("", SGuiConsts.GUI_TYPE_DEC_PER_DISC, false);
        moDecEffortEfficiencyPercentage.setDecimalSettings("", SGuiConsts.GUI_TYPE_DEC_PER_DISC, false);
        
        moFields.addField(moKeyProjectStage);
        moFields.addField(moDateCutoff);
        
        moFields.setFormButton(jbStatsCutoffCompute);
        
        jbSave.setEnabled(false);
        jbCancel.setText(SGuiConsts.TXT_BTN_CLOSE);
    }
    
    private void adjustProgressBar(final JProgressBar progressBar, final double percentage) {
        int value = (int) percentage;
        progressBar.setMinimum(0);
        progressBar.setMaximum((value + (percentage - value == 0 ? 0 : 1)) * 100);
    }
    
    private void actionStatsCutoffCompute() {
        double percentage = 0;
        SPrjStatsCutoff statsCutoff = null;
        SGuiValidation validation = null;
        
        validation = moDateCutoff.validateField();
        
        if (validation.isValid()) {
            if (moDateCutoff.getValue().before(moRegistry.getDateStartPlanned())) {
                validation.setMessage(SGuiConsts.ERR_MSG_FIELD_DATE_ + "'" + SGuiUtils.getLabelName(jlCutoff) + "'" + SGuiConsts.ERR_MSG_FIELD_DATE_GREAT_EQUAL + "'" + SGuiUtils.getLabelName(jlDateStartPlanned) + "'.");
                validation.setComponent(moDateCutoff);
            }
        }
        
        if (!validation.isValid()) {
            SGuiUtils.computeValidation(miClient, validation);
        }
        else {
            try {
                statsCutoff = SPrjUtils.computeProjectStatsCutoff(miClient.getSession(), moRegistry.getPkProjectId(), moKeyProjectStage.getSelectedIndex() <= 0 ? SLibConsts.UNDEFINED : moKeyProjectStage.getValue()[1], moDateCutoff.getValue());
                
                moDateStatsStartPlanned.setValue(statsCutoff.DateStart);
                moDateStatsEndPlanned.setValue(statsCutoff.DateEnd);
                moCompDaysPlanned.getField().setValue((double) statsCutoff.DaysPlanned);
                moCompDaysElapsed.getField().setValue((double) statsCutoff.DaysElapsed);
                moCompDaysToElapse.getField().setValue(statsCutoff.getDaysToElapse());
                moCompWorkPlanned.getField().setValue(statsCutoff.WorkPlanned);
                moCompWorkElapsed.getField().setValue(statsCutoff.WorkElapsed);
                moCompWorkFinished.getField().setValue(statsCutoff.WorkFinished);
                moCompWorkGap.getField().setValue(statsCutoff.getWorkGap());
                moDecWorkGapPercentage.setValue(statsCutoff.getWorkGapPercentage());
                moCompEffortRequired.getField().setValue(statsCutoff.EffortRequired);
                moCompEffortEfficiency.getField().setValue(statsCutoff.getEffortEfficiency());
                moDecEffortEfficiencyPercentage.setValue(statsCutoff.getEffortEfficiencyPercentage());
                
                percentage = statsCutoff.getDaysElapsedPercentage();
                moDecDaysElapsedProgress.setValue(percentage);
                adjustProgressBar(jpbDaysElapsedProgress, percentage);
                percentage = SLibUtils.round(percentage * 100, 0);
                jpbDaysElapsedProgress.setValue((int) percentage);
                jpbDaysElapsedProgress.setString("" + (int) percentage + "%");
                
                percentage = statsCutoff.getWorkElapsedPercentage();
                moDecWorkElapsedProgress.setValue(percentage);
                adjustProgressBar(jpbWorkElapsedProgress, percentage);
                percentage = SLibUtils.round(percentage * 100, 0);
                jpbWorkElapsedProgress.setValue((int) percentage);
                jpbWorkElapsedProgress.setString("" + (int) percentage + "%");
                
                percentage = statsCutoff.getWorkFinishedPercentage();
                moDecWorkFinishedProgress.setValue(percentage);
                adjustProgressBar(jpbWorkFinishedProgress, percentage);
                percentage = SLibUtils.round(percentage * 100, 0);
                jpbWorkFinishedProgress.setValue((int) percentage);
                jpbWorkFinishedProgress.setString("" + (int) percentage + "%");
                
                jbStatsCutoffCompute.setEnabled(false);
                jbStatsCutoffClear.setEnabled(true);
                moKeyProjectStage.setEnabled(false);
                moDateCutoff.setEditable(false);
                
                jbStatsCutoffClear.requestFocus();
            }
            catch (Exception e) {
                SLibUtils.showException(this, e);
            }
        }
    }
    
    private void actionStatsCutoffClear() {
        jbStatsCutoffCompute.setEnabled(true);
        jbStatsCutoffClear.setEnabled(false);
        moKeyProjectStage.setEnabled(true);
        moDateCutoff.setEditable(true);
        
        moKeyProjectStage.requestFocus();
        
        moDateStatsStartPlanned.setValue(null);
        moDateStatsEndPlanned.setValue(null);
        moCompDaysPlanned.getField().setValue(0d);
        moCompDaysElapsed.getField().setValue(0d);
        moCompDaysToElapse.getField().setValue(0d);
        moCompWorkPlanned.getField().setValue(0d);
        moCompWorkElapsed.getField().setValue(0d);
        moCompWorkFinished.getField().setValue(0d);
        moCompWorkGap.getField().setValue(0d);
        moCompEffortRequired.getField().setValue(0d);
        moCompEffortEfficiency.getField().setValue(0d);
        moDecDaysElapsedProgress.setValue(0d);
        moDecWorkElapsedProgress.setValue(0d);
        moDecWorkFinishedProgress.setValue(0d);
        moDecWorkGapPercentage.setValue(0d);
        moDecEffortEfficiencyPercentage.setValue(0d);
        jpbDaysElapsedProgress.setValue(0);
        jpbWorkElapsedProgress.setValue(0);
        jpbWorkFinishedProgress.setValue(0);
        jpbDaysElapsedProgress.setString("0%");
        jpbWorkElapsedProgress.setString("0%");
        jpbWorkFinishedProgress.setString("0%");
    }
    
    /*
     * Public methods
     */
    
    /*
     * Protected methods
     */
    
    @Override
    public void addAllListeners() {
        jbStatsCutoffClear.addActionListener(this);
        jbStatsCutoffCompute.addActionListener(this);
    }

    @Override
    public void removeAllListeners() {
        jbStatsCutoffClear.removeActionListener(this);
        jbStatsCutoffCompute.removeActionListener(this);
    }

    @Override
    public void reloadCatalogues() {
        miClient.getSession().populateCatalogue(moKeyProjectStage, SModConsts.PU_PRJ_STG, SLibConsts.UNDEFINED, new SGuiParams(moRegistry.getPrimaryKey()));
    }

    @Override
    public void setRegistry(SDbRegistry registry) throws Exception {
        SPrjStatsBasic statsBasic = null;
        
        moRegistry = (SDbProject) registry;
        
        removeAllListeners();
        reloadCatalogues();
        
        jtfCode.setText(moRegistry.getCode());
        jtfCode.setCaretPosition(0);
        jtfName.setText(moRegistry.getName());
        jtfName.setCaretPosition(0);
        jtfType.setText((String) miClient.getSession().readField(SModConsts.PS_PRJ_TP, new int[] { moRegistry.getFkProjectTypeId() }, SDbRegistry.FIELD_NAME));
        jtfType.setCaretPosition(0);
        jtfStatus.setText((String) miClient.getSession().readField(SModConsts.CS_ST, new int[] { moRegistry.getFkProjectStatusId()}, SDbRegistry.FIELD_NAME));
        jtfStatus.setCaretPosition(0);
        moDateStartPlanned.setValue(moRegistry.getDateStartPlanned());
        moDateEndPlanned.setValue(moRegistry.getDateEndPlanned());
        moCompTimePlanned.getField().setValue(moRegistry.getTimePlanned());
        moDateStartReal.setValue(moRegistry.getDateStartReal_n());
        moDateEndReal.setValue(moRegistry.getDateEndReal_n());
        moCompTimeReal.getField().setValue(moRegistry.getTimeReal_r());
        jtfUser.setText((String) miClient.getSession().readField(SModConsts.CU_USR, new int[] { moRegistry.getFkProjectUserId()}, SDbRegistry.FIELD_NAME));
        jtfUser.setCaretPosition(0);
        
        statsBasic = SPrjUtils.computeProjectStatsBasic(miClient.getSession(), moRegistry.getPkProjectId());
        
        moDateQuery.setValue(miClient.getSession().getSystemDate());
        moCompStatsTimePlanPnd.getField().setValue(statsBasic.TimePlanPnd);
        moCompStatsTimePlanPrc.getField().setValue(statsBasic.TimePlanPrc);
        moCompStatsTimePlanFin.getField().setValue(statsBasic.TimePlanFin);
        moCompStatsTimePlanCan.getField().setValue(statsBasic.TimePlanCan);
        moCompStatsTimePlan.getField().setValue(statsBasic.TimePlan);
        moCompStatsTimeRealPnd.getField().setValue(statsBasic.TimeRealPnd);
        moCompStatsTimeRealPrc.getField().setValue(statsBasic.TimeRealPrc);
        moCompStatsTimeRealFin.getField().setValue(statsBasic.TimeRealFin);
        moCompStatsTimeRealCan.getField().setValue(statsBasic.TimeRealCan);
        moCompStatsTimeReal.getField().setValue(statsBasic.TimeReal);
        moDecStatsTimePercPnd.setValue(statsBasic.getTimePlanPercentage(SModSysConsts.CS_ST_PND));
        moDecStatsTimePercPrc.setValue(statsBasic.getTimePlanPercentage(SModSysConsts.CS_ST_PRC));
        moDecStatsTimePercFin.setValue(statsBasic.getTimePlanPercentage(SModSysConsts.CS_ST_FIN));
        moDecStatsTimePercCan.setValue(statsBasic.getTimePlanPercentage(SModSysConsts.CS_ST_CAN));
        moDecStatsTimePerc.setValue(1d);
        
        moDateCutoff.setValue(miClient.getSession().getCurrentDate());
        actionStatsCutoffClear();
        
        addAllListeners();
    }

    @Override
    public SDbRegistry getRegistry() throws Exception {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public SGuiValidation validateForm() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() instanceof JButton) {
            JButton button = (JButton) e.getSource();
            
            if (button == jbStatsCutoffCompute) {
                actionStatsCutoffCompute();
            }
            else if (button == jbStatsCutoffClear) {
                actionStatsCutoffClear();
            }
        }
    }
}
